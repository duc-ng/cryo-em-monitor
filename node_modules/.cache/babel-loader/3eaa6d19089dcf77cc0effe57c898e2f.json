{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js\";\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getXY = () => {\n      const {\n        config,\n        times,\n        data\n      } = this.state;\n      var keyTimes = config.files[Object.keys(config.files)[0]].value0;\n      var keyData = config.files[Object.keys(config.files)[1]].value0;\n\n      const mergeById = (a1, a2) => a1.map(itm => ({ ...a2.find(item => item.keyData === itm.keyTimes && item),\n        ...itm\n      }));\n\n      console.log(mergeById(times, data)); //merge by Key \n      // for(let i=0; i<arr3.length; i++) {\n      //   console.log(Object.keys(arr3[i]).length);\n      // }\n      // console.log(\"#############################\");\n      //filter times and data\n\n      let merged = [];\n\n      for (let i = 0; i < times.length; i++) {\n        merged.push({ ...times[i],\n          ...data.find(itmInner => itmInner.keyData === times[i].keyTimes)\n        });\n      } //console.log(merged);\n      //merge\n\n\n      var result = {\n        x: 0,\n        y: 0\n      };\n      return result;\n    };\n\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(this.state.config.app.host + \":\" + this.state.config.app.port); //new times.star\n\n    socket.on(\"newTimes\", item => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item])\n      });\n    }); //new data.star\n\n    socket.on(\"newData\", item => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item])\n      });\n    });\n  } //filter data for graphs\n\n\n  render() {\n    const {\n      timesLoaded,\n      dataLoaded\n    } = this.state;\n\n    if (!(timesLoaded && dataLoaded)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return (\n        /*#__PURE__*/\n        //<NavBar />\n        //<Activity />\n        React.createElement(Graphs, {\n          coord: this.getXY(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }\n        }) //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js"],"names":["React","Component","socketIOClient","Graphs","App","constructor","props","getXY","config","times","data","state","keyTimes","files","Object","keys","value0","keyData","mergeById","a1","a2","map","itm","find","item","console","log","merged","i","length","push","itmInner","result","x","y","require","timesLoaded","dataLoaded","componentDidMount","socket","app","host","port","on","setState","concat","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(this.state.config.app.host + \":\" + this.state.config.app.port);\n\n    //new times.star\n    socket.on(\"newTimes\", (item) => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item])\n      });\n    });\n\n    //new data.star\n    socket.on(\"newData\", (item) => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item]),\n      });\n    });\n  }\n\n  //filter data for graphs\n  getXY = () => {\n    const { config,times, data } = this.state;\n    var keyTimes = config.files[Object.keys(config.files)[0]].value0\n    var keyData = config.files[Object.keys(config.files)[1]].value0\n\n\n    const mergeById = (a1, a2) =>\n    a1.map(itm => ({\n        ...a2.find((item) => (item.keyData === itm.keyTimes) && item),\n        ...itm\n    }));\n    console.log(mergeById(times, data));\n\n    //merge by Key \n   \n\n    // for(let i=0; i<arr3.length; i++) {\n    //   console.log(Object.keys(arr3[i]).length);\n    // }\n    // console.log(\"#############################\");\n\n\n    //filter times and data\n    let merged = [];\n    for(let i=0; i<times.length; i++) {\n      merged.push({\n       ...times[i], \n       ...(data.find((itmInner) => itmInner.keyData === times[i].keyTimes))}\n      );\n    }\n    \n    //console.log(merged);\n\n  \n\n    //merge\n \n    var result = { x: 0, y: 0 };\n\n    return result;\n  }\n\n  render() {\n    const { timesLoaded, dataLoaded } = this.state;\n    if (!(timesLoaded && dataLoaded)) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        //<NavBar />\n        //<Activity />\n        <Graphs coord={this.getXY()} />\n        //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}