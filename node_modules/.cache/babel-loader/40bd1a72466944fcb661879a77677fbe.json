{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from './Graphs';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.mergeById = (a1, a2, id) => {\n      if (a1 == null) return a2;\n      a1.map(itm => ({ ...a2.find(item => item[id] === itm[id] && item),\n        ...itm\n      }));\n    };\n\n    this.getXY = () => {\n      const {\n        data,\n        times,\n        config\n      } = this.state;\n      var starObject = config.files[Object.keys(config.files)[0]];\n      var keyName = starObject[Object.keys(starObject)[0]];\n      console.log(this.mergeById(data, times, keyName));\n      return 0;\n    };\n\n    this.state = {\n      config: require('./../config.json'),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      config,\n      times,\n      data\n    } = this.state;\n    const socket = socketIOClient(config.app.host + \":\" + config.app.port); //new times.star\n\n    socket.on(\"newTimes\", item => {\n      this.setState({\n        timesLoaded: true,\n        times: times.push(item)\n      });\n    }); //new data.star\n\n    socket.on(\"newData\", item => {\n      this.setState({\n        dataLoaded: true,\n        data: data.push(item)\n      });\n    });\n  }\n\n  render() {\n    const {\n      timesLoaded,\n      dataLoaded,\n      times\n    } = this.state;\n    this.getXY();\n\n    if (!(timesLoaded && dataLoaded)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return (\n        /*#__PURE__*/\n        //<NavBar />\n        //<Activity />\n        React.createElement(Graphs, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }\n        }) //coord = {this.getXY()}\n        //<Table /> \n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>  \n\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js"],"names":["React","Component","socketIOClient","Graphs","App","constructor","props","mergeById","a1","a2","id","map","itm","find","item","getXY","data","times","config","state","starObject","files","Object","keys","keyName","console","log","require","timesLoaded","dataLoaded","componentDidMount","socket","app","host","port","on","setState","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport socketIOClient from \"socket.io-client\"; \nimport Graphs from './Graphs'\n\nexport default class App extends Component {\n  \n  constructor (props){\n    super(props)\n    this.state = {\n      config: require('./../config.json'),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    }\n  }\n\n\n  componentDidMount(){\n    const {config, times, data} = this.state;\n    const socket = socketIOClient(config.app.host+\":\"+config.app.port); \n    \n    //new times.star\n    socket.on(\"newTimes\", item => {\n        this.setState({\n          timesLoaded: true,\n          times: times.push(item)\n        });\n    });\n\n    //new data.star\n    socket.on(\"newData\", item => {\n      this.setState({\n        dataLoaded: true,\n        data: data.push(item)\n      });\n    });\n\n  }\n\n  mergeById = (a1, a2, id) => {\n    if (a1 == null) return a2\n    a1.map(itm => ({\n      ...a2.find((item) => (item[id] === itm[id]) && item),\n      ...itm\n  }))}\n\n\n  //filter data for graphs\n  getXY = () => {\n    const {data, times, config } = this.state;\n    var starObject = config.files[Object.keys(config.files)[0]]\n    var keyName = starObject[Object.keys(starObject)[0]]\n    \n    \n\n    console.log(this.mergeById(data, times, keyName));\n    return 0\n  }\n\n\n  \n  render() {\n    const {timesLoaded, dataLoaded, times } = this.state;\n    this.getXY()\n    if (!(timesLoaded && dataLoaded)) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        //<NavBar />\n        //<Activity />\n        <Graphs />  //coord = {this.getXY()}\n        //<Table /> \n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>  \n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}