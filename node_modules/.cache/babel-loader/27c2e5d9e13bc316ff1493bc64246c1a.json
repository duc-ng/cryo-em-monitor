{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/Graphs.js\";\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nexport default class Graphs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addData = () => {\n      const {\n        line1,\n        layout\n      } = this.state;\n      line1.x.push(2);\n      this.setState({\n        revision: this.state.revision + 1\n      });\n    };\n\n    this.state = {\n      response: true,\n      revision: 0,\n      line1: {\n        x: [],\n        y: [],\n        name: 'Line 1',\n        mode: \"markers\",\n        type: \"scatter\"\n      },\n      layout: {\n        title: \"Title Loading\",\n        xaxis: {\n          type: \"date\",\n          range: ['2020-07-01', '2020-12-31'] //tickformat: '%H:%M'\n\n        } //autosize: false,\n        //height: 300,\n\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, this.state.response ? /*#__PURE__*/React.createElement(Plot, {\n      revision: this.state.revision,\n      data: this.state.data,\n      layout: this.state.layout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Loading...\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/Graphs.js"],"names":["React","Component","Plot","Graphs","constructor","props","addData","line1","layout","state","x","push","setState","revision","response","y","name","mode","type","title","xaxis","range","render","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC5CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyBnBC,OAzBmB,GAyBT,MAAO;AACf,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAoB,KAAKC,KAA/B;AACAF,MAAAA,KAAK,CAACG,CAAN,CAAQC,IAAR,CAAa,CAAb;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,QAAX,GAAsB;AAAlC,OAAd;AACD,KA7BkB;;AAEjB,SAAKJ,KAAL,GAAa;AACXK,MAAAA,QAAQ,EAAE,IADC;AAEXD,MAAAA,QAAQ,EAAE,CAFC;AAGXN,MAAAA,KAAK,EAAE;AACLG,QAAAA,CAAC,EAAE,EADE;AAELK,QAAAA,CAAC,EAAE,EAFE;AAGLC,QAAAA,IAAI,EAAE,QAHD;AAILC,QAAAA,IAAI,EAAE,SAJD;AAKLC,QAAAA,IAAI,EAAE;AALD,OAHI;AAUXV,MAAAA,MAAM,EAAE;AACNW,QAAAA,KAAK,EAAE,eADD;AAENC,QAAAA,KAAK,EAAE;AACLF,UAAAA,IAAI,EAAE,MADD;AAELG,UAAAA,KAAK,EAAE,CAAC,YAAD,EAAe,YAAf,CAFF,CAGL;;AAHK,SAFD,CAON;AACA;;AARM;AAVG,KAAb;AAqBD;;AAQDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKb,KAAL,CAAWK,QAAX,gBACC,oBAAC,IAAD;AACE,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWI,QADvB;AAEE,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWc,IAFnB;AAGE,MAAA,MAAM,EAAE,KAAKd,KAAL,CAAWD,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,CADF;AAaD;;AA9C2C","sourcesContent":["import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nexport default class Graphs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: true,\n      revision: 0,\n      line1: {\n        x: [],\n        y: [], \n        name: 'Line 1',\n        mode: \"markers\",\n        type: \"scatter\",\n      },\n      layout: {\n        title: \"Title Loading\",\n        xaxis: {\n          type: \"date\",\n          range: ['2020-07-01', '2020-12-31'],\n          //tickformat: '%H:%M'\n        },\n        //autosize: false,\n        //height: 300,\n      }\n    };\n  }\n\n  addData = () =>  {\n    const { line1, layout } = this.state;\n    line1.x.push(2)\n    this.setState({ revision: this.state.revision + 1 });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.response ? (\n          <Plot\n            revision={this.state.revision}\n            data={this.state.data}\n            layout={this.state.layout}\n          />\n        ) : (\n          <p>Loading...</p>\n        )}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}