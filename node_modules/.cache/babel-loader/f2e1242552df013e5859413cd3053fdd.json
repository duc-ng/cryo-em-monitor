{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/Graphs.js\";\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\nexport default class Graphs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: true,\n      line1: {\n        x: this.props.attr.x,\n        y: this.props.attr.y,\n        name: 'Line 1',\n        mode: \"markers\",\n        type: \"scatter\",\n        hoverinfo: \"text\",\n        hovertext: this.props.attr.info\n      },\n      layout: {\n        title: this.props.title,\n        xaxis: {\n          type: \"date\" //range: [],\n          //tickformat: '%H:%M'\n\n        },\n        //autosize: false,\n        height: 300\n      },\n      config: {\n        staticPlot: true\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.attr !== prevProps.attr) {\n      var temp = this.state.line1;\n      temp.x = this.props.attr.x;\n      temp.y = this.props.attr.y;\n      temp.hovertext = this.props.attr.info;\n      this.setState((state, props) => {\n        return {\n          line1: temp\n        };\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, this.state.response ? /*#__PURE__*/React.createElement(Plot, {\n      revision: this.state.revision,\n      data: [this.state.line1],\n      layout: this.state.layout,\n      congfig: this.state.config,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"Loading...\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/Graphs.js"],"names":["React","Component","Plot","Graphs","constructor","props","state","response","line1","x","attr","y","name","mode","type","hoverinfo","hovertext","info","layout","title","xaxis","height","config","staticPlot","componentDidUpdate","prevProps","temp","setState","render","revision"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC5CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,KAAK,EAAE;AACLC,QAAAA,CAAC,EAAE,KAAKJ,KAAL,CAAWK,IAAX,CAAgBD,CADd;AAELE,QAAAA,CAAC,EAAE,KAAKN,KAAL,CAAWK,IAAX,CAAgBC,CAFd;AAGLC,QAAAA,IAAI,EAAE,QAHD;AAILC,QAAAA,IAAI,EAAE,SAJD;AAKLC,QAAAA,IAAI,EAAE,SALD;AAMLC,QAAAA,SAAS,EAAE,MANN;AAOLC,QAAAA,SAAS,EAAE,KAAKX,KAAL,CAAWK,IAAX,CAAgBO;AAPtB,OAFI;AAWXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,KAAKd,KAAL,CAAWc,KADZ;AAENC,QAAAA,KAAK,EAAE;AACLN,UAAAA,IAAI,EAAE,MADD,CAEL;AACA;;AAHK,SAFD;AAON;AACAO,QAAAA,MAAM,EAAE;AARF,OAXG;AAqBXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,UAAU,EAAE;AADN;AArBG,KAAb;AAyBD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKpB,KAAL,CAAWK,IAAX,KAAoBe,SAAS,CAACf,IAAlC,EAAwC;AACtC,UAAIgB,IAAI,GAAG,KAAKpB,KAAL,CAAWE,KAAtB;AACAkB,MAAAA,IAAI,CAACjB,CAAL,GAAS,KAAKJ,KAAL,CAAWK,IAAX,CAAgBD,CAAzB;AACAiB,MAAAA,IAAI,CAACf,CAAL,GAAS,KAAKN,KAAL,CAAWK,IAAX,CAAgBC,CAAzB;AACAe,MAAAA,IAAI,CAACV,SAAL,GAAiB,KAAKX,KAAL,CAAWK,IAAX,CAAgBO,IAAjC;AACA,WAAKU,QAAL,CAAc,CAACrB,KAAD,EAAQD,KAAR,KAAkB;AAC9B,eAAO;AAACG,UAAAA,KAAK,EAAEkB;AAAR,SAAP;AACD,OAFD;AAGD;AACF;;AAGDE,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKtB,KAAL,CAAWC,QAAX,gBACC,oBAAC,IAAD;AACE,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWuB,QADvB;AAEE,MAAA,IAAI,EAAE,CAAC,KAAKvB,KAAL,CAAWE,KAAZ,CAFR;AAGE,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWY,MAHrB;AAIE,MAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWgB,MAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,CADF;AAcD;;AA1D2C","sourcesContent":["import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nexport default class Graphs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: true,\n      line1: {\n        x: this.props.attr.x,\n        y: this.props.attr.y, \n        name: 'Line 1',\n        mode: \"markers\",\n        type: \"scatter\",\n        hoverinfo: \"text\",\n        hovertext: this.props.attr.info,\n      },\n      layout: {\n        title: this.props.title,\n        xaxis: {\n          type: \"date\",\n          //range: [],\n          //tickformat: '%H:%M'\n        },\n        //autosize: false,\n        height: 300,\n      },\n      config: {\n        staticPlot: true\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.attr !== prevProps.attr) {\n      var temp = this.state.line1;\n      temp.x = this.props.attr.x;\n      temp.y = this.props.attr.y;\n      temp.hovertext = this.props.attr.info;\n      this.setState((state, props) => {\n        return {line1: temp};\n      });\n    }\n  }\n\n  \n  render() {\n    return (\n      <React.Fragment>\n        {this.state.response ? (\n          <Plot\n            revision={this.state.revision}\n            data={[this.state.line1]}\n            layout={this.state.layout}\n            congfig={this.state.config}\n          />\n        ) : (\n          <p>Loading...</p>\n        )}\n      </React.Fragment>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}