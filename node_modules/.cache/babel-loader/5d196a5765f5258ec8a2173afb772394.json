{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js\";\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getXY = () => {\n      //init \n      const {\n        config,\n        times,\n        data\n      } = this.state;\n      var key1 = config.files[Object.keys(config.files)[0]].value0;\n      var key2 = config.files[Object.keys(config.files)[1]].value0; //inner join by key\n\n      var mergedArray = [];\n\n      for (var i = 0; i < times.length; i++) {\n        for (var j = 0; j < data.length; j++) {\n          if (times[i][key1] === data[j][key2]) {\n            const mergedObj = { ...times[i],\n              ...data[j]\n            };\n            mergedArray.push(mergedObj);\n          }\n        }\n      } //filter by x and y\n\n\n      const x = mergedArray.map(elem => {\n        return elem._mmsdateAuqired_Value;\n      });\n      const y = mergedArray.map(elem => {\n        return elem._mmsmean_Value;\n      });\n      var result = {\n        x,\n        y\n      };\n      console.log(result);\n      return result;\n    };\n\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(this.state.config.app.host + \":\" + this.state.config.app.port); //new times.star\n\n    socket.on(\"newTimes\", item => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item])\n      });\n    }); //new data.star\n\n    socket.on(\"newData\", item => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item])\n      });\n    });\n  } //filter data for graphs\n\n\n  render() {\n    const {\n      timesLoaded,\n      dataLoaded\n    } = this.state;\n\n    if (!(timesLoaded && dataLoaded)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Graphs, {\n        coord: this.getXY(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      })) //<Activity />\n      //<Table />\n      //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n      ;\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js"],"names":["React","Component","socketIOClient","Graphs","App","constructor","props","getXY","config","times","data","state","key1","files","Object","keys","value0","key2","mergedArray","i","length","j","mergedObj","push","x","map","elem","_mmsdateAuqired_Value","y","_mmsmean_Value","result","console","log","require","timesLoaded","dataLoaded","componentDidMount","socket","app","host","port","on","item","setState","concat","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACzCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkCnBC,KAlCmB,GAkCX,MAAM;AACZ;AACA,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,KAAV;AAAiBC,QAAAA;AAAjB,UAA0B,KAAKC,KAArC;AACA,UAAIC,IAAI,GAAGJ,MAAM,CAACK,KAAP,CAAaC,MAAM,CAACC,IAAP,CAAYP,MAAM,CAACK,KAAnB,EAA0B,CAA1B,CAAb,EAA2CG,MAAtD;AACA,UAAIC,IAAI,GAAGT,MAAM,CAACK,KAAP,CAAaC,MAAM,CAACC,IAAP,CAAYP,MAAM,CAACK,KAAnB,EAA0B,CAA1B,CAAb,EAA2CG,MAAtD,CAJY,CAMZ;;AACA,UAAIE,WAAW,GAAG,EAAlB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACW,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,IAAI,CAACU,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AACpC,cAAIZ,KAAK,CAACU,CAAD,CAAL,CAASP,IAAT,MAAmBF,IAAI,CAACW,CAAD,CAAJ,CAAQJ,IAAR,CAAvB,EAAsC;AACpC,kBAAMK,SAAS,GAAG,EAAE,GAAGb,KAAK,CAACU,CAAD,CAAV;AAAe,iBAAGT,IAAI,CAACW,CAAD;AAAtB,aAAlB;AACAH,YAAAA,WAAW,CAACK,IAAZ,CAAiBD,SAAjB;AACD;AACF;AACF,OAfW,CAiBZ;;;AACA,YAAME,CAAC,GAAGN,WAAW,CAACO,GAAZ,CAAiBC,IAAD,IAAU;AAClC,eAAOA,IAAI,CAACC,qBAAZ;AACD,OAFS,CAAV;AAGA,YAAMC,CAAC,GAAGV,WAAW,CAACO,GAAZ,CAAiBC,IAAD,IAAU;AAClC,eAAOA,IAAI,CAACG,cAAZ;AACD,OAFS,CAAV;AAGA,UAAIC,MAAM,GAAG;AAAEN,QAAAA,CAAF;AAAKI,QAAAA;AAAL,OAAb;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,aAAOA,MAAP;AACD,KA9DkB;;AAEjB,SAAKnB,KAAL,GAAa;AACXH,MAAAA,MAAM,EAAEyB,OAAO,CAAC,kBAAD,CADJ;AAEXC,MAAAA,WAAW,EAAE,KAFF;AAGXC,MAAAA,UAAU,EAAE,KAHD;AAIX1B,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,IAAI,EAAE;AALK,KAAb;AAOD;;AAED0B,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAGnC,cAAc,CAC3B,KAAKS,KAAL,CAAWH,MAAX,CAAkB8B,GAAlB,CAAsBC,IAAtB,GAA6B,GAA7B,GAAmC,KAAK5B,KAAL,CAAWH,MAAX,CAAkB8B,GAAlB,CAAsBE,IAD9B,CAA7B,CADkB,CAKlB;;AACAH,IAAAA,MAAM,CAACI,EAAP,CAAU,UAAV,EAAuBC,IAAD,IAAU;AAC9B,WAAKC,QAAL,CAAc;AACZT,QAAAA,WAAW,EAAE,IADD;AAEZzB,QAAAA,KAAK,EAAE,KAAKE,KAAL,CAAWF,KAAX,CAAiBmC,MAAjB,CAAwB,CAACF,IAAD,CAAxB;AAFK,OAAd;AAID,KALD,EANkB,CAalB;;AACAL,IAAAA,MAAM,CAACI,EAAP,CAAU,SAAV,EAAsBC,IAAD,IAAU;AAC7B,WAAKC,QAAL,CAAc;AACZR,QAAAA,UAAU,EAAE,IADA;AAEZzB,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IAAX,CAAgBkC,MAAhB,CAAuB,CAACF,IAAD,CAAvB;AAFM,OAAd;AAID,KALD;AAMD,GAhCwC,CAkCzC;;;AA+BAG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA8B,KAAKxB,KAAzC;;AACA,QAAI,EAAEuB,WAAW,IAAIC,UAAjB,CAAJ,EAAkC;AAChC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,KAAK5B,KAAL,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CAKE;AACA;AACA;AAPF;AASD;AACF;;AAhFwC","sourcesContent":["import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(\n      this.state.config.app.host + \":\" + this.state.config.app.port\n    );\n\n    //new times.star\n    socket.on(\"newTimes\", (item) => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item]),\n      });\n    });\n\n    //new data.star\n    socket.on(\"newData\", (item) => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item]),\n      });\n    });\n  }\n\n  //filter data for graphs\n  getXY = () => {\n    //init \n    const { config, times, data } = this.state;\n    var key1 = config.files[Object.keys(config.files)[0]].value0;\n    var key2 = config.files[Object.keys(config.files)[1]].value0;\n\n    //inner join by key\n    var mergedArray = [];\n    for (var i = 0; i < times.length; i++) {\n      for (var j = 0; j < data.length; j++) {\n        if (times[i][key1] === data[j][key2]) {\n          const mergedObj = { ...times[i], ...data[j] };\n          mergedArray.push(mergedObj);\n        }\n      }\n    }\n\n    //filter by x and y\n    const x = mergedArray.map((elem) => {\n      return elem._mmsdateAuqired_Value;\n    });\n    const y = mergedArray.map((elem) => {\n      return elem._mmsmean_Value;\n    });\n    var result = { x, y };\n    console.log(result);\n\n    return result;\n  };\n\n  render() {\n    const { timesLoaded, dataLoaded } = this.state;\n    if (!(timesLoaded && dataLoaded)) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <NavBar />\n          <Graphs coord={this.getXY()} />\n        </div>\n        //<Activity />\n        //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}