{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from './Graphs';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getX = () => {\n      return times;\n    };\n\n    this.state = {\n      config: require('./../config.json'),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: {},\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      config\n    } = this.state;\n    const socket = socketIOClient(config.app.host + \":\" + config.app.port);\n    socket.on(\"newTimes\", items => {\n      this.setState({\n        timesLoaded: true,\n        times: times.push(items)\n      });\n      console.log(times.length);\n    }); // socket.on(\"newData\", items => {\n    //   this.setState({\n    //     dataLoaded: true,\n    //     data: data.push(items)\n    //   });\n    // });\n  }\n\n  render() {\n    const {\n      timesLoaded,\n      dataLoaded,\n      times\n    } = this.state;\n\n    if (!(timesLoaded && dataLoaded)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return (\n        /*#__PURE__*/\n        //<NavBar />\n        //<Activity />\n        React.createElement(Graphs, {\n          x: 21321,\n          y: 31231,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }\n        }) //<Table /> \n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>  \n\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js"],"names":["React","Component","socketIOClient","Graphs","App","constructor","props","getX","times","state","config","require","timesLoaded","dataLoaded","data","componentDidMount","socket","app","host","port","on","items","setState","push","console","log","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAEzCI,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA8BnBC,IA9BmB,GA8BZ,MAAM;AACX,aAAOC,KAAP;AACD,KAhCkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEC,OAAO,CAAC,kBAAD,CADJ;AAEXC,MAAAA,WAAW,EAAE,KAFF;AAGXC,MAAAA,UAAU,EAAE,KAHD;AAIXL,MAAAA,KAAK,EAAE,EAJI;AAKXM,MAAAA,IAAI,EAAE;AALK,KAAb;AAOD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACL,MAAAA;AAAD,QAAW,KAAKD,KAAtB;AACA,UAAMO,MAAM,GAAGd,cAAc,CAACQ,MAAM,CAACO,GAAP,CAAWC,IAAX,GAAgB,GAAhB,GAAoBR,MAAM,CAACO,GAAP,CAAWE,IAAhC,CAA7B;AACAH,IAAAA,MAAM,CAACI,EAAP,CAAU,UAAV,EAAsBC,KAAK,IAAI;AAC7B,WAAKC,QAAL,CAAc;AACZV,QAAAA,WAAW,EAAE,IADD;AAEZJ,QAAAA,KAAK,EAAEA,KAAK,CAACe,IAAN,CAAWF,KAAX;AAFK,OAAd;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACkB,MAAlB;AACD,KAND,EAHiB,CAWjB;AACA;AACA;AACA;AACA;AACA;AACD;;AASDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACf,MAAAA,WAAD;AAAcC,MAAAA,UAAd;AAA0BL,MAAAA;AAA1B,QAAoC,KAAKC,KAA/C;;AACA,QAAI,EAAEG,WAAW,IAAIC,UAAjB,CAAJ,EAAkC;AAChC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAEO;AACL;AAAA;AACE;AACA;AACA,4BAAC,MAAD;AACE,UAAA,CAAC,EAAI,KADP;AACc,UAAA,CAAC,EAAE,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CAME;AACA;;AAPF;AASD;AACF;;AAtDwC","sourcesContent":["import React, { Component } from 'react'\nimport socketIOClient from \"socket.io-client\"; \nimport Graphs from './Graphs'\n\nexport default class App extends Component {\n  \n  constructor (props){\n    super(props)\n    this.state = {\n      config: require('./../config.json'),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: {},\n      data: {}\n    }\n  }\n\n  componentDidMount(){\n    const {config} = this.state;\n    const socket = socketIOClient(config.app.host+\":\"+config.app.port);\n    socket.on(\"newTimes\", items => {\n      this.setState({\n        timesLoaded: true,\n        times: times.push(items)\n      });\n      console.log(times.length)\n    });\n\n    // socket.on(\"newData\", items => {\n    //   this.setState({\n    //     dataLoaded: true,\n    //     data: data.push(items)\n    //   });\n    // });\n  }\n\n  getX = () => {\n    return times\n  }\n\n\n\n  \n  render() {\n    const {timesLoaded, dataLoaded, times } = this.state;\n    if (!(timesLoaded && dataLoaded)) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        //<NavBar />\n        //<Activity />\n        <Graphs \n          x = {21321} y={31231}\n        /> \n        //<Table /> \n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>  \n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}