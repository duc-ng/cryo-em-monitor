{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js\";\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getXY = () => {\n      const {\n        config,\n        times,\n        data\n      } = this.state;\n      var key1 = config.files[Object.keys(config.files)[0]].value0;\n      var key2 = config.files[Object.keys(config.files)[1]].value0;\n      var sizeTimes = Object.keys(config.files[Object.keys(config.files)[0]]).length; //6\n\n      var sizeData = Object.keys(config.files[Object.keys(config.files)[1]]).length; //15\n\n      var size = sizeTimes + sizeData - 1;\n      var authormap = {};\n      times.forEach(function (author) {\n        authormap[author.key1] = author;\n      }); // now do the \"join\":\n\n      const innerJoin = (xs, ys, sel) => xs.reduce((zs, x) => ys.reduce((zs, y // cartesian product - all combinations\n      ) => zs.concat(sel(x, y) || []), // filter out the rows and columns you want\n      zs), []);\n\n      const abc = innerJoin(times, data, ({\n        key1,\n        ...times\n      }, {\n        key2,\n        ...data\n      }) => key1 === key2 && {\n        key1,\n        ...times,\n        ...data\n      });\n      console.table(abc); // var mergedArray = Object.values(({...times, ...data}))\n      // var filtered = mergedArray.filter (o => Object.keys(o).length === size);\n      // //console.log(filtered)\n      // for(let i=0; i<mergedArray.length; i++) {\n      //   if (Object.keys(mergedArray[i]).length!=size) {\n      //     console.log(\"dsadsadsa\")\n      //    // mergedArray.splice(i,1)\n      // //   }\n      // // }\n      // console.log(mergedArray)\n      // for(let i=0; i<mergedArray.length; i++) {\n      //     console.log(Object.keys(mergedArray[i]).length)\n      // }\n      // console.log(\"#############################\");\n      //merge\n\n      var result = {\n        x: 0,\n        y: 0\n      };\n      return result;\n    };\n\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(this.state.config.app.host + \":\" + this.state.config.app.port); //new times.star\n\n    socket.on(\"newTimes\", item => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item])\n      });\n    }); //new data.star\n\n    socket.on(\"newData\", item => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item])\n      });\n    });\n  } //filter data for graphs\n\n\n  render() {\n    const {\n      timesLoaded,\n      dataLoaded\n    } = this.state;\n\n    if (!(timesLoaded && dataLoaded)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return (\n        /*#__PURE__*/\n        //<NavBar />\n        //<Activity />\n        React.createElement(Graphs, {\n          coord: this.getXY(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }\n        }) //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js"],"names":["React","Component","socketIOClient","Graphs","App","constructor","props","getXY","config","times","data","state","key1","files","Object","keys","value0","key2","sizeTimes","length","sizeData","size","authormap","forEach","author","innerJoin","xs","ys","sel","reduce","zs","x","y","concat","abc","console","table","result","require","timesLoaded","dataLoaded","componentDidMount","socket","app","host","port","on","item","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(\n      this.state.config.app.host + \":\" + this.state.config.app.port\n    );\n\n    //new times.star\n    socket.on(\"newTimes\", (item) => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item]),\n      });\n    });\n\n    //new data.star\n    socket.on(\"newData\", (item) => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item]),\n      });\n    });\n  }\n\n  //filter data for graphs\n  getXY = () => {\n    const { config, times, data } = this.state;\n    var key1 = config.files[Object.keys(config.files)[0]].value0;\n    var key2 = config.files[Object.keys(config.files)[1]].value0;\n\n    var sizeTimes = Object.keys(config.files[Object.keys(config.files)[0]])\n      .length; //6\n    var sizeData = Object.keys(config.files[Object.keys(config.files)[1]])\n      .length; //15\n    var size = sizeTimes + sizeData - 1;\n\n    var authormap = {};\n    times.forEach(function (author) {\n      authormap[author.key1] = author;\n    });\n\n    // now do the \"join\":\n\n    const innerJoin = (xs, ys, sel) =>\n      xs.reduce(\n        (zs, x) =>\n          ys.reduce(\n            (\n              zs,\n              y // cartesian product - all combinations\n            ) => zs.concat(sel(x, y) || []), // filter out the rows and columns you want\n            zs\n          ),\n        []\n      );\n\n\n    const abc = innerJoin(\n      times,\n      data,\n      ({ key1, ...times }, { key2, ...data }) =>\n        key1 === key2 && { key1, ...times, ...data }\n    );\n\n\n    console.table(abc);\n\n    // var mergedArray = Object.values(({...times, ...data}))\n    // var filtered = mergedArray.filter (o => Object.keys(o).length === size);\n    // //console.log(filtered)\n\n    // for(let i=0; i<mergedArray.length; i++) {\n    //   if (Object.keys(mergedArray[i]).length!=size) {\n    //     console.log(\"dsadsadsa\")\n    //    // mergedArray.splice(i,1)\n    // //   }\n    // // }\n    // console.log(mergedArray)\n    // for(let i=0; i<mergedArray.length; i++) {\n    //     console.log(Object.keys(mergedArray[i]).length)\n    // }\n    // console.log(\"#############################\");\n\n    //merge\n\n    var result = { x: 0, y: 0 };\n\n    return result;\n  };\n\n  render() {\n    const { timesLoaded, dataLoaded } = this.state;\n    if (!(timesLoaded && dataLoaded)) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        //<NavBar />\n        //<Activity />\n        <Graphs coord={this.getXY()} />\n        //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}