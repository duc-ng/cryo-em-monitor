{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js\";\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getXY = () => {\n      const {\n        config,\n        times,\n        data\n      } = this.state;\n      var key1 = config.files[Object.keys(config.files)[0]].value0;\n      var key2 = config.files[Object.keys(config.files)[1]].value0;\n      var sizeTimes = Object.keys(config.files[Object.keys(config.files)[0]]).length; //6\n\n      var sizeData = Object.keys(config.files[Object.keys(config.files)[1]]).length; //15\n\n      var size = sizeTimes + sizeData - 1;\n      var authormap = {};\n      times.forEach(function (author) {\n        authormap[author.key1] = author;\n      }); // now do the \"join\":\n\n      const equijoin = (xs, ys, primary, foreign, sel) => {\n        const ix = xs.reduce((ix, row) => ix.set(row[primary], row), new Map());\n        return ys.map(row => sel(ix.get(row[foreign]), row));\n      };\n\n      const userProfiles = [{\n        id: 1,\n        name: \"Ashok\"\n      }, {\n        id: 2,\n        name: \"Amit\"\n      }, {\n        id: 3,\n        name: \"Rajeev\"\n      }];\n      const questions = [{\n        id: 1,\n        text: \"text1\",\n        createdBy: 2\n      }, {\n        id: 2,\n        text: \"text2\",\n        createdBy: 2\n      }, {\n        id: 3,\n        text: \"text3\",\n        createdBy: 1\n      }, {\n        id: 4,\n        text: \"text4\",\n        createdBy: 2\n      }, {\n        id: 5,\n        text: \"text5\",\n        createdBy: 3\n      }, {\n        id: 6,\n        text: \"text6\",\n        createdBy: 3\n      }];\n      const abc = equijoin(userProfiles, questions, \"id\", \"createdBy\", ({\n        name,\n        ...rest\n      }, {\n        id,\n        text\n      }) => ({\n        id,\n        ...rest,\n        text,\n        name\n      }));\n      console.log(\"Open your browser console to see the output.\");\n      console.table(abc); // var mergedArray = Object.values(({...times, ...data}))\n      // var filtered = mergedArray.filter (o => Object.keys(o).length === size);\n      // //console.log(filtered)\n      // for(let i=0; i<mergedArray.length; i++) {\n      //   if (Object.keys(mergedArray[i]).length!=size) {\n      //     console.log(\"dsadsadsa\")\n      //    // mergedArray.splice(i,1)\n      // //   }\n      // // }\n      // console.log(mergedArray)\n      // for(let i=0; i<mergedArray.length; i++) {\n      //     console.log(Object.keys(mergedArray[i]).length)\n      // }\n      // console.log(\"#############################\");\n      //merge\n\n      var result = {\n        x: 0,\n        y: 0\n      };\n      return result;\n    };\n\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(this.state.config.app.host + \":\" + this.state.config.app.port); //new times.star\n\n    socket.on(\"newTimes\", item => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item])\n      });\n    }); //new data.star\n\n    socket.on(\"newData\", item => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item])\n      });\n    });\n  } //filter data for graphs\n\n\n  render() {\n    const {\n      timesLoaded,\n      dataLoaded\n    } = this.state;\n\n    if (!(timesLoaded && dataLoaded)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return (\n        /*#__PURE__*/\n        //<NavBar />\n        //<Activity />\n        React.createElement(Graphs, {\n          coord: this.getXY(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 9\n          }\n        }) //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js"],"names":["React","Component","socketIOClient","Graphs","App","constructor","props","getXY","config","times","data","state","key1","files","Object","keys","value0","key2","sizeTimes","length","sizeData","size","authormap","forEach","author","equijoin","xs","ys","primary","foreign","sel","ix","reduce","row","set","Map","map","get","userProfiles","id","name","questions","text","createdBy","abc","rest","console","log","table","result","x","y","require","timesLoaded","dataLoaded","componentDidMount","socket","app","host","port","on","item","setState","concat","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(\n      this.state.config.app.host + \":\" + this.state.config.app.port\n    );\n\n    //new times.star\n    socket.on(\"newTimes\", (item) => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item]),\n      });\n    });\n\n    //new data.star\n    socket.on(\"newData\", (item) => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item]),\n      });\n    });\n  }\n\n  //filter data for graphs\n  getXY = () => {\n    const { config, times, data } = this.state;\n    var key1 = config.files[Object.keys(config.files)[0]].value0;\n    var key2 = config.files[Object.keys(config.files)[1]].value0;\n\n    var sizeTimes = Object.keys(config.files[Object.keys(config.files)[0]])\n      .length; //6\n    var sizeData = Object.keys(config.files[Object.keys(config.files)[1]])\n      .length; //15\n    var size = sizeTimes + sizeData - 1;\n\n    var authormap = {};\n    times.forEach(function (author) {\n      authormap[author.key1] = author;\n    });\n\n    // now do the \"join\":\n    \n    const equijoin = (xs, ys, primary, foreign, sel) => {\n      const ix = xs.reduce((ix, row) => ix.set(row[primary], row), new Map);\n      return ys.map(row => sel(ix.get(row[foreign]), row));\n    };\n    \n    const userProfiles = [\n        {id: 1, name: \"Ashok\"},\n        {id: 2, name: \"Amit\"},\n        {id: 3, name: \"Rajeev\"},\n    ];\n    \n    const questions = [\n        {id: 1, text: \"text1\", createdBy: 2},\n        {id: 2, text: \"text2\", createdBy: 2},\n        {id: 3, text: \"text3\", createdBy: 1},\n        {id: 4, text: \"text4\", createdBy: 2},\n        {id: 5, text: \"text5\", createdBy: 3},\n        {id: 6, text: \"text6\", createdBy: 3},\n    ];\n    \n    const abc = equijoin(userProfiles, questions, \"id\", \"createdBy\",\n        ({name, ...rest}, {id, text}) => ({id, ...rest, text, name}));\n    \n    console.log(\"Open your browser console to see the output.\");\n    \n    console.table(abc);\n\n    // var mergedArray = Object.values(({...times, ...data}))\n    // var filtered = mergedArray.filter (o => Object.keys(o).length === size);\n    // //console.log(filtered)\n\n    // for(let i=0; i<mergedArray.length; i++) {\n    //   if (Object.keys(mergedArray[i]).length!=size) {\n    //     console.log(\"dsadsadsa\")\n    //    // mergedArray.splice(i,1)\n    // //   }\n    // // }\n    // console.log(mergedArray)\n    // for(let i=0; i<mergedArray.length; i++) {\n    //     console.log(Object.keys(mergedArray[i]).length)\n    // }\n    // console.log(\"#############################\");\n\n    //merge\n\n    var result = { x: 0, y: 0 };\n\n    return result;\n  };\n\n  render() {\n    const { timesLoaded, dataLoaded } = this.state;\n    if (!(timesLoaded && dataLoaded)) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        //<NavBar />\n        //<Activity />\n        <Graphs coord={this.getXY()} />\n        //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}