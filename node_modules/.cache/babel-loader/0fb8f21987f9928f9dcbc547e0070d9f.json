{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js\";\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getXY = () => {\n      const {\n        config,\n        times,\n        data\n      } = this.state; //var keyTimes = config.files[Object.keys(config.files)[0]].value0\n      //var keyData = config.files[Object.keys(config.files)[1]].value0\n\n      var sizeTimes = Object.keys(config.files[Object.keys(config.files)[0]]).length; //6\n\n      var sizeData = Object.keys(config.files[Object.keys(config.files)[1]]).length; //15\n\n      var size = sizeTimes + sizeData - 1;\n      const r = times.filter(({\n        id: idv\n      }) => data.every(({\n        id: idc\n      }) => idv !== idc));\n      const newArr = data.concat(r).map(v => v.position ? v : { ...v,\n        position: null\n      });\n      console.log(newArr);\n      var mergedArray = Object.values({ ...times,\n        ...data\n      });\n      var filtered = mergedArray.filter(o => Object.keys(o).length === size); //console.log(filtered)\n      // for(let i=0; i<mergedArray.length; i++) {\n      //   if (Object.keys(mergedArray[i]).length!=size) {\n      //     console.log(\"dsadsadsa\")\n      //    // mergedArray.splice(i,1)\n      //   }\n      // }\n\n      console.log(mergedArray);\n\n      for (let i = 0; i < mergedArray.length; i++) {\n        console.log(Object.keys(mergedArray[i]).length);\n      }\n\n      console.log(\"#############################\"); //merge\n\n      var result = {\n        x: 0,\n        y: 0\n      };\n      return result;\n    };\n\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(this.state.config.app.host + \":\" + this.state.config.app.port); //new times.star\n\n    socket.on(\"newTimes\", item => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item])\n      });\n    }); //new data.star\n\n    socket.on(\"newData\", item => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item])\n      });\n    });\n  } //filter data for graphs\n\n\n  render() {\n    const {\n      timesLoaded,\n      dataLoaded\n    } = this.state;\n\n    if (!(timesLoaded && dataLoaded)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return (\n        /*#__PURE__*/\n        //<NavBar />\n        //<Activity />\n        React.createElement(Graphs, {\n          coord: this.getXY(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }\n        }) //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js"],"names":["React","Component","socketIOClient","Graphs","App","constructor","props","getXY","config","times","data","state","sizeTimes","Object","keys","files","length","sizeData","size","r","filter","id","idv","every","idc","newArr","concat","map","v","position","console","log","mergedArray","values","filtered","o","i","result","x","y","require","timesLoaded","dataLoaded","componentDidMount","socket","app","host","port","on","item","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(this.state.config.app.host + \":\" + this.state.config.app.port);\n\n    //new times.star\n    socket.on(\"newTimes\", (item) => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item])\n      });\n    });\n\n    //new data.star\n    socket.on(\"newData\", (item) => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item]),\n      });\n    });\n  }\n\n  //filter data for graphs\n  getXY = () => {\n    const { config,times, data } = this.state;\n    //var keyTimes = config.files[Object.keys(config.files)[0]].value0\n    //var keyData = config.files[Object.keys(config.files)[1]].value0\n\n    var sizeTimes = Object.keys(config.files[Object.keys(config.files)[0]]).length //6\n    var sizeData = Object.keys(config.files[Object.keys(config.files)[1]]).length //15\n    var size = sizeTimes + sizeData - 1\n\n    const r = times.filter(({ id: idv }) => data.every(({ id: idc }) => idv !== idc));\n    const newArr = data.concat(r).map((v) => v.position ? v : { ...v, position: null });\n\n    console.log(newArr);\n\n\n\n\n    var mergedArray = Object.values(({...times, ...data}))\n    var filtered = mergedArray.filter (o => Object.keys(o).length === size); \n    //console.log(filtered)\n    \n    // for(let i=0; i<mergedArray.length; i++) {\n    //   if (Object.keys(mergedArray[i]).length!=size) {\n    //     console.log(\"dsadsadsa\")\n    //    // mergedArray.splice(i,1)\n    //   }\n    // }\n    console.log(mergedArray)\n    for(let i=0; i<mergedArray.length; i++) {\n        console.log(Object.keys(mergedArray[i]).length)\n    }\n    console.log(\"#############################\");\n\n\n\n  \n\n    //merge\n \n    var result = { x: 0, y: 0 };\n\n    return result;\n  }\n\n  render() {\n    const { timesLoaded, dataLoaded } = this.state;\n    if (!(timesLoaded && dataLoaded)) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        //<NavBar />\n        //<Activity />\n        <Graphs coord={this.getXY()} />\n        //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}