{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js\";\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getXY = () => {\n      const {\n        config,\n        times,\n        data\n      } = this.state;\n      var keyTimes = config.files[Object.keys(config.files)[0]].value0;\n      var keyData = config.files[Object.keys(config.files)[1]].value0; //merge by Key \n\n      var mergedArray = Object.values({ ...times,\n        ...data\n      });\n\n      for (let i = 0; i < mergedArray.length; i++) {\n        console.log(Object.keys(mergedArray[i]).length);\n      }\n\n      console.log(\"#############################\"); //filter times and data\n\n      let merged = [];\n\n      for (let i = 0; i < times.length; i++) {\n        merged.push({ ...times[i],\n          ...data.find(itmInner => itmInner.keyData === times[i].keyTimes)\n        });\n      } //console.log(merged);\n      //merge\n\n\n      var result = {\n        x: 0,\n        y: 0\n      };\n      return result;\n    };\n\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(this.state.config.app.host + \":\" + this.state.config.app.port); //new times.star\n\n    socket.on(\"newTimes\", item => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item])\n      });\n    }); //new data.star\n\n    socket.on(\"newData\", item => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item])\n      });\n    });\n  } //filter data for graphs\n\n\n  render() {\n    const {\n      timesLoaded,\n      dataLoaded\n    } = this.state;\n\n    if (!(timesLoaded && dataLoaded)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return (\n        /*#__PURE__*/\n        //<NavBar />\n        //<Activity />\n        React.createElement(Graphs, {\n          coord: this.getXY(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }\n        }) //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js"],"names":["React","Component","socketIOClient","Graphs","App","constructor","props","getXY","config","times","data","state","keyTimes","files","Object","keys","value0","keyData","mergedArray","values","i","length","console","log","merged","push","find","itmInner","result","x","y","require","timesLoaded","dataLoaded","componentDidMount","socket","app","host","port","on","item","setState","concat","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(this.state.config.app.host + \":\" + this.state.config.app.port);\n\n    //new times.star\n    socket.on(\"newTimes\", (item) => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item])\n      });\n    });\n\n    //new data.star\n    socket.on(\"newData\", (item) => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item]),\n      });\n    });\n  }\n\n  //filter data for graphs\n  getXY = () => {\n    const { config,times, data } = this.state;\n    var keyTimes = config.files[Object.keys(config.files)[0]].value0\n    var keyData = config.files[Object.keys(config.files)[1]].value0\n\n    //merge by Key \n    var mergedArray = Object.values(({...times, ...data}))\n    for(let i=0; i<mergedArray.length; i++) {\n      console.log(Object.keys(mergedArray[i]).length);\n    }\n    console.log(\"#############################\");\n\n\n    //filter times and data\n    let merged = [];\n    for(let i=0; i<times.length; i++) {\n      merged.push({\n       ...times[i], \n       ...(data.find((itmInner) => itmInner.keyData === times[i].keyTimes))}\n      );\n    }\n    \n    //console.log(merged);\n\n  \n\n    //merge\n \n    var result = { x: 0, y: 0 };\n\n    return result;\n  }\n\n  render() {\n    const { timesLoaded, dataLoaded } = this.state;\n    if (!(timesLoaded && dataLoaded)) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        //<NavBar />\n        //<Activity />\n        <Graphs coord={this.getXY()} />\n        //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}