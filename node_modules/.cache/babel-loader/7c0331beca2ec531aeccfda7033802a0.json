{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from './Graphs';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getXY = () => {\n      const {\n        data,\n        config,\n        times\n      } = this.state;\n      var starObject = config.files[Object.keys(config.files)[0]];\n      var keyName = starObject[Object.keys(starObject)[0]];\n      console.log(times);\n\n      for (var i = 0; i < times.length; i++) {\n        console.log(\"dsadas\");\n      } //console.log(times._mmsImageKey_Value)\n\n\n      var result = {\n        x: 0,\n        y: 0\n      };\n\n      if (data.length !== 0 && times.length !== 0) {// var abc = data.map ((x) => {\n        //   return x\n        // })\n      }\n\n      return result;\n    };\n\n    this.state = {\n      config: require('./../config.json'),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      config,\n      times,\n      data\n    } = this.state;\n    const socket = socketIOClient(config.app.host + \":\" + config.app.port); //new times.star\n\n    socket.on(\"newTimes\", item => {\n      this.setState({\n        timesLoaded: true,\n        times: times.push(item)\n      });\n    }); //new data.star\n\n    socket.on(\"newData\", item => {\n      this.setState({\n        dataLoaded: true,\n        data: data.push(item)\n      });\n    });\n  } //filter data for graphs\n\n\n  render() {\n    const {\n      timesLoaded,\n      dataLoaded,\n      times\n    } = this.state;\n\n    if (!(timesLoaded && dataLoaded)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return (\n        /*#__PURE__*/\n        //<NavBar />\n        //<Activity /> \n        React.createElement(Graphs, {\n          coord: this.getXY,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }\n        }) //<Table /> \n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>  \n\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js"],"names":["React","Component","socketIOClient","Graphs","App","constructor","props","getXY","data","config","times","state","starObject","files","Object","keys","keyName","console","log","i","length","result","x","y","require","timesLoaded","dataLoaded","componentDidMount","socket","app","host","port","on","item","setState","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport socketIOClient from \"socket.io-client\"; \nimport Graphs from './Graphs'\n\nexport default class App extends Component {\n  \n  constructor (props){\n    super(props)\n    this.state = {\n      config: require('./../config.json'),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    }\n  }\n\n\n  componentDidMount(){\n    const {config, times, data} = this.state;\n    const socket = socketIOClient(config.app.host+\":\"+config.app.port); \n    \n    //new times.star\n    socket.on(\"newTimes\", item => {\n        this.setState({\n          timesLoaded: true,\n          times: times.push(item)\n        });\n    });\n\n    //new data.star\n    socket.on(\"newData\", item => {\n      this.setState({\n        dataLoaded: true,\n        data: data.push(item)\n      });\n    });\n\n  }\n\n\n  //filter data for graphs\n   getXY = () => {\n    const {data, config,times } = this.state;\n    var starObject = config.files[Object.keys(config.files)[0]]\n    var keyName = starObject[Object.keys(starObject)[0]]\n\n    console.log(times)\n\n    for (var i=0;i<times.length;i++){\n      console.log(\"dsadas\")\n    }\n\n\n    //console.log(times._mmsImageKey_Value)\n    var result = {x:0,y:0}\n    if (data.length !== 0 && times.length !== 0 ){\n\n      // var abc = data.map ((x) => {\n      //   return x\n      // })\n    }\n\n    return result\n  }\n\n\n  \n  render() {\n    const {timesLoaded, dataLoaded,times } = this.state;\n    if (!(timesLoaded && dataLoaded)) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        //<NavBar />\n        //<Activity /> \n        <Graphs coord = {this.getXY} /> \n        //<Table /> \n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>  \n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}