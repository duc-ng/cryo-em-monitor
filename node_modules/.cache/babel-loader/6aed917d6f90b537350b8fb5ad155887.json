{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js\";\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getXY = () => {\n      const {\n        config,\n        times,\n        data\n      } = this.state;\n      var key1 = config.files[Object.keys(config.files)[0]].value0;\n      var key2 = config.files[Object.keys(config.files)[1]].value0;\n      var sizeTimes = Object.keys(config.files[Object.keys(config.files)[0]]).length; //6\n\n      var sizeData = Object.keys(config.files[Object.keys(config.files)[1]]).length; //15\n\n      var size = sizeTimes + sizeData - 1;\n      var authormap = {};\n      times.forEach(function (author) {\n        authormap[author.key1] = author;\n      }); // now do the \"join\":\n\n      data.forEach(function (book) {\n        book.author = authormap[book.key2];\n      });\n      var mergedArray = Object.values({ ...times,\n        ...data\n      });\n      var filtered = mergedArray.filter(o => Object.keys(o).length === size); //console.log(filtered)\n      // for(let i=0; i<mergedArray.length; i++) {\n      //   if (Object.keys(mergedArray[i]).length!=size) {\n      //     console.log(\"dsadsadsa\")\n      //    // mergedArray.splice(i,1)\n      // //   }\n      // // }\n      // console.log(mergedArray)\n      // for(let i=0; i<mergedArray.length; i++) {\n      //     console.log(Object.keys(mergedArray[i]).length)\n      // }\n      // console.log(\"#############################\");\n      //merge\n\n      var result = {\n        x: 0,\n        y: 0\n      };\n      return result;\n    };\n\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(this.state.config.app.host + \":\" + this.state.config.app.port); //new times.star\n\n    socket.on(\"newTimes\", item => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item])\n      });\n    }); //new data.star\n\n    socket.on(\"newData\", item => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item])\n      });\n    });\n  } //filter data for graphs\n\n\n  render() {\n    const {\n      timesLoaded,\n      dataLoaded\n    } = this.state;\n\n    if (!(timesLoaded && dataLoaded)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return (\n        /*#__PURE__*/\n        //<NavBar />\n        //<Activity />\n        React.createElement(Graphs, {\n          coord: this.getXY(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }\n        }) //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js"],"names":["React","Component","socketIOClient","Graphs","App","constructor","props","getXY","config","times","data","state","key1","files","Object","keys","value0","key2","sizeTimes","length","sizeData","size","authormap","forEach","author","book","mergedArray","values","filtered","filter","o","result","x","y","require","timesLoaded","dataLoaded","componentDidMount","socket","app","host","port","on","item","setState","concat","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(this.state.config.app.host + \":\" + this.state.config.app.port);\n\n    //new times.star\n    socket.on(\"newTimes\", (item) => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item])\n      });\n    });\n\n    //new data.star\n    socket.on(\"newData\", (item) => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item]),\n      });\n    });\n  }\n\n  //filter data for graphs\n  getXY = () => {\n    const { config,times, data } = this.state;\n    var key1 = config.files[Object.keys(config.files)[0]].value0\n    var key2 = config.files[Object.keys(config.files)[1]].value0\n\n    var sizeTimes = Object.keys(config.files[Object.keys(config.files)[0]]).length //6\n    var sizeData = Object.keys(config.files[Object.keys(config.files)[1]]).length //15\n    var size = sizeTimes + sizeData - 1\n\n    var authormap = {};\n    times.forEach(function(author) {authormap[author.key1] = author;});\n    \n    // now do the \"join\":\n    data.forEach(function(book) {\n        book.author = authormap[book.key2];\n    });\n\n\n\n\n    var mergedArray = Object.values(({...times, ...data}))\n    var filtered = mergedArray.filter (o => Object.keys(o).length === size); \n    //console.log(filtered)\n    \n    // for(let i=0; i<mergedArray.length; i++) {\n    //   if (Object.keys(mergedArray[i]).length!=size) {\n    //     console.log(\"dsadsadsa\")\n    //    // mergedArray.splice(i,1)\n    // //   }\n    // // }\n    // console.log(mergedArray)\n    // for(let i=0; i<mergedArray.length; i++) {\n    //     console.log(Object.keys(mergedArray[i]).length)\n    // }\n    // console.log(\"#############################\");\n\n\n\n  \n\n    //merge\n \n    var result = { x: 0, y: 0 };\n\n    return result;\n  }\n\n  render() {\n    const { timesLoaded, dataLoaded } = this.state;\n    if (!(timesLoaded && dataLoaded)) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        //<NavBar />\n        //<Activity />\n        <Graphs coord={this.getXY()} />\n        //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}