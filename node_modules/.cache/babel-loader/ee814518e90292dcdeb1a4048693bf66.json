{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js\";\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\nimport NavBar from \"./NavBar\";\nimport Backdrop from \"./Backdrop\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Divider } from '@material-ui/core';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getGraphData = value => {\n      //init\n      const {\n        config,\n        times,\n        data\n      } = this.state;\n      const key1 = config.files[Object.keys(config.files)[0]].value0;\n      const key2 = config.files[Object.keys(config.files)[1]].value0;\n      const dateAcquired = \"_mmsdateAuqired_Value\";\n      const valueNames = [];\n      const infoNames = [];\n\n      for (var i = 1; i < Object.values(Object.values(config.files)[1]).length - 1; i = i + 2) {\n        valueNames.push(Object.values(Object.values(config.files)[1])[i]);\n        infoNames.push(Object.values(Object.values(config.files)[1])[i + 1]);\n      }\n\n      console.log(infoNames); //inner join by key\n\n      var mergedArray = [];\n\n      for (var a = 0; a < times.length; a++) {\n        for (var j = 0; j < data.length; j++) {\n          if (times[a][key1] === data[j][key2]) {\n            const mergedObj = { ...times[a],\n              ...data[j]\n            };\n            mergedArray.push(mergedObj);\n          }\n        }\n      } //filter by x and y\n\n\n      const x = mergedArray.map(elem => {\n        return elem[dateAcquired];\n      });\n      const y = mergedArray.map(elem => {\n        return elem[valueNames[value]];\n      });\n      const info = mergedArray.map(elem => {\n        return elem[infoNames];\n      });\n      var result = {\n        x,\n        y,\n        value\n      };\n      return result;\n    };\n\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(this.state.config.app.host + \":\" + this.state.config.app.port); //new times.star\n\n    socket.on(\"newTimes\", item => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item])\n      });\n    }); //new data.star\n\n    socket.on(\"newData\", item => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item])\n      });\n    });\n  } //filter data for graphs\n\n\n  render() {\n    //init\n    const {\n      timesLoaded,\n      dataLoaded,\n      config\n    } = this.state;\n    var graphs = [];\n\n    for (var i = 0; i < Object.keys(config.plots).length; i++) {\n      graphs.push( /*#__PURE__*/React.createElement(Graphs, {\n        attr: this.getGraphData(i),\n        key: i,\n        title: Object.values(config.plots)[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }));\n    } //return\n\n\n    if (!(timesLoaded && dataLoaded)) {\n      return /*#__PURE__*/React.createElement(Backdrop, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, \" \", \"Graphs\", \" \"), /*#__PURE__*/React.createElement(Divider, {\n        light: true,\n        variant: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, graphs), \";\") //<Activity />\n      //<Table />\n      //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n      ;\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js"],"names":["React","Component","socketIOClient","Graphs","NavBar","Backdrop","Typography","Divider","App","constructor","props","getGraphData","value","config","times","data","state","key1","files","Object","keys","value0","key2","dateAcquired","valueNames","infoNames","i","values","length","push","console","log","mergedArray","a","j","mergedObj","x","map","elem","y","info","result","require","timesLoaded","dataLoaded","componentDidMount","socket","app","host","port","on","item","setState","concat","render","graphs","plots"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\nimport NavBar from \"./NavBar\";\nimport Backdrop from \"./Backdrop\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Divider } from '@material-ui/core';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    const socket = socketIOClient(\n      this.state.config.app.host + \":\" + this.state.config.app.port\n    );\n\n    //new times.star\n    socket.on(\"newTimes\", (item) => {\n      this.setState({\n        timesLoaded: true,\n        times: this.state.times.concat([item]),\n      });\n    });\n\n    //new data.star\n    socket.on(\"newData\", (item) => {\n      this.setState({\n        dataLoaded: true,\n        data: this.state.data.concat([item]),\n      });\n    });\n  }\n\n  //filter data for graphs\n  getGraphData = (value) => {\n    //init\n    const { config, times, data } = this.state;\n    const key1 = config.files[Object.keys(config.files)[0]].value0;\n    const key2 = config.files[Object.keys(config.files)[1]].value0;\n    const dateAcquired = \"_mmsdateAuqired_Value\"\n    const valueNames = []\n    const infoNames = []\n    for(var i=1;i<Object.values(Object.values(config.files)[1]).length-1;i=i+2){\n      valueNames.push(Object.values(Object.values(config.files)[1])[i])\n      infoNames.push(Object.values(Object.values(config.files)[1])[i+1])\n    }\n    console.log(infoNames)\n\n    //inner join by key\n    var mergedArray = [];\n    for (var a = 0; a < times.length; a++) {\n      for (var j = 0; j < data.length; j++) {\n        if (times[a][key1] === data[j][key2]) {\n          const mergedObj = { ...times[a], ...data[j] };\n          mergedArray.push(mergedObj);\n        }\n      }\n    }\n\n    //filter by x and y\n    const x = mergedArray.map((elem) => {\n      return elem[dateAcquired];\n    });\n    const y = mergedArray.map((elem) => {\n      return elem[valueNames[value]];\n    });\n    const info = mergedArray.map((elem) => {\n      return elem[infoNames];\n    });\n    var result = { x, y,value };\n    return result;\n  };\n\n  render() {\n    //init\n    const { timesLoaded, dataLoaded, config } = this.state;\n    var graphs = [];\n    for (var i = 0; i < Object.keys(config.plots).length; i++) {\n      graphs.push(<Graphs attr={this.getGraphData(i)} key={i} title={Object.values(config.plots)[i]} />);\n    }\n\n    //return\n    if (!(timesLoaded && dataLoaded)) {\n      return <Backdrop />;\n    } else {\n      return (\n        <React.Fragment>\n          <NavBar />\n          <Typography variant=\"h5\" gutterBottom>\n            {\" \"}\n            Graphs{\" \"}\n          </Typography>\n          <Divider light={true} variant={\"middle\"}/>\n          <div>{graphs}</div>;\n        </React.Fragment>\n\n        //<Activity />\n        //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}