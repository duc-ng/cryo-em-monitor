{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js\";\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      config,\n      times,\n      data\n    } = this.state;\n    const socket = socketIOClient(config.app.host + \":\" + config.app.port); //new times.star\n\n    socket.on(\"newTimes\", item => {\n      this.setState({\n        timesLoaded: true,\n        times: times.concat([item])\n      });\n    }); // //new data.star\n    // socket.on(\"newData\", (item) => {\n    //   this.setState({\n    //     dataLoaded: true,\n    //     data: data.push(item),\n    //   });\n    // });\n  } //filter data for graphs\n\n\n  getXY(times) {\n    const {\n      data,\n      config\n    } = this.state;\n    var starObject = config.files[Object.keys(config.files)[0]];\n    var keyName = starObject[Object.keys(starObject)[0]];\n    console.log(times);\n\n    for (var i = 0; i < times.length; i++) {\n      console.log(\"dsadas\");\n    } //console.log(times._mmsImageKey_Value)\n\n\n    var result = {\n      x: 0,\n      y: 0\n    };\n\n    if (data.length !== 0 && times.length !== 0) {// var abc = data.map ((x) => {\n      //   return x\n      // })\n    }\n\n    return result;\n  }\n\n  render() {\n    const {\n      timesLoaded,\n      dataLoaded,\n      times\n    } = this.state;\n\n    if (!(timesLoaded && dataLoaded)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return (\n        /*#__PURE__*/\n        //<NavBar />\n        //<Activity />\n        React.createElement(Graphs, {\n          coord: this.getXY(times),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }\n        }) //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js"],"names":["React","Component","socketIOClient","Graphs","App","constructor","props","state","config","require","timesLoaded","dataLoaded","times","data","componentDidMount","socket","app","host","port","on","item","setState","concat","getXY","starObject","files","Object","keys","keyName","console","log","i","length","result","x","y","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACzCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEC,OAAO,CAAC,kBAAD,CADJ;AAEXC,MAAAA,WAAW,EAAE,KAFF;AAGXC,MAAAA,UAAU,EAAE,KAHD;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,IAAI,EAAE;AALK,KAAb;AAOD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEN,MAAAA,MAAF;AAAUI,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB,QAA0B,KAAKN,KAArC;AACA,UAAMQ,MAAM,GAAGb,cAAc,CAACM,MAAM,CAACQ,GAAP,CAAWC,IAAX,GAAkB,GAAlB,GAAwBT,MAAM,CAACQ,GAAP,CAAWE,IAApC,CAA7B,CAFkB,CAIlB;;AACAH,IAAAA,MAAM,CAACI,EAAP,CAAU,UAAV,EAAuBC,IAAD,IAAU;AAC9B,WAAKC,QAAL,CAAc;AACZX,QAAAA,WAAW,EAAE,IADD;AAEZE,QAAAA,KAAK,EAAEA,KAAK,CAACU,MAAN,CAAa,CAACF,IAAD,CAAb;AAFK,OAAd;AAID,KALD,EALkB,CAYlB;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA/BwC,CAiCzC;;;AACAG,EAAAA,KAAK,CAACX,KAAD,EAAQ;AACX,UAAM;AAAEC,MAAAA,IAAF;AAAQL,MAAAA;AAAR,QAAmB,KAAKD,KAA9B;AACA,QAAIiB,UAAU,GAAGhB,MAAM,CAACiB,KAAP,CAAaC,MAAM,CAACC,IAAP,CAAYnB,MAAM,CAACiB,KAAnB,EAA0B,CAA1B,CAAb,CAAjB;AACA,QAAIG,OAAO,GAAGJ,UAAU,CAACE,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwB,CAAxB,CAAD,CAAxB;AAGAK,IAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;;AAEA,SAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,KAAK,CAACoB,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCF,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,KAVU,CAYX;;;AACA,QAAIG,MAAM,GAAG;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAb;;AACA,QAAItB,IAAI,CAACmB,MAAL,KAAgB,CAAhB,IAAqBpB,KAAK,CAACoB,MAAN,KAAiB,CAA1C,EAA6C,CAC3C;AACA;AACA;AACD;;AAED,WAAOC,MAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE1B,MAAAA,WAAF;AAAeC,MAAAA,UAAf;AAA2BC,MAAAA;AAA3B,QAAqC,KAAKL,KAAhD;;AACA,QAAI,EAAEG,WAAW,IAAIC,UAAjB,CAAJ,EAAkC;AAChC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAEO;AACL;AAAA;AACE;AACA;AACA,4BAAC,MAAD;AAAQ,UAAA,KAAK,EAAE,KAAKY,KAAL,CAAWX,KAAX,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CAIE;AACA;;AALF;AAOD;AACF;;AAtEwC","sourcesContent":["import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from \"./Graphs\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: require(\"./../config.json\"),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    const { config, times, data } = this.state;\n    const socket = socketIOClient(config.app.host + \":\" + config.app.port);\n\n    //new times.star\n    socket.on(\"newTimes\", (item) => {\n      this.setState({\n        timesLoaded: true,\n        times: times.concat([item]),\n      });\n    });\n\n    // //new data.star\n    // socket.on(\"newData\", (item) => {\n    //   this.setState({\n    //     dataLoaded: true,\n    //     data: data.push(item),\n    //   });\n    // });\n  }\n\n  //filter data for graphs\n  getXY(times) {\n    const { data, config } = this.state;\n    var starObject = config.files[Object.keys(config.files)[0]];\n    var keyName = starObject[Object.keys(starObject)[0]];\n\n\n    console.log(times);\n\n    for (var i = 0; i < times.length; i++) {\n      console.log(\"dsadas\");\n    }\n\n    //console.log(times._mmsImageKey_Value)\n    var result = { x: 0, y: 0 };\n    if (data.length !== 0 && times.length !== 0) {\n      // var abc = data.map ((x) => {\n      //   return x\n      // })\n    }\n\n    return result;\n  }\n\n  render() {\n    const { timesLoaded, dataLoaded, times } = this.state;\n    if (!(timesLoaded && dataLoaded)) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        //<NavBar />\n        //<Activity />\n        <Graphs coord={this.getXY(times)} />\n        //<Table />\n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}