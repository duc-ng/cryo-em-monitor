{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/Graphs.js\";\nimport React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nclass Graphs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: false,\n      data: [{\n        y: [],\n        x: [],\n        mode: \"markers\",\n        type: \"scatter\"\n      }],\n      layout: {\n        title: \"Graph 1\",\n        xaxis: {\n          type: \"date\",\n          range: ['2020-07-01', '2020-12-31'] //tickformat: '%H:%M'\n\n        } //autosize: false,\n        //height: 300,\n\n      },\n      frames: [],\n      config: {}\n    };\n  }\n\n  render() {\n    const {\n      response\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, response ? /*#__PURE__*/React.createElement(Plot, {\n      data: this.state.data,\n      layout: this.state.layout,\n      frames: this.state.frames,\n      config: this.state.config,\n      onInitialized: figure => this.setState(figure),\n      onUpdate: figure => this.setState(figure),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Loading...\"));\n  }\n\n}\n\nexport default Graphs;","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/Graphs.js"],"names":["React","Component","Plot","Graphs","constructor","props","state","response","data","y","x","mode","type","layout","title","xaxis","range","frames","config","render","figure","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,CAAC,EAAE,EADL;AAEEC,QAAAA,CAAC,EAAE,EAFL;AAGEC,QAAAA,IAAI,EAAE,SAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADI,CAFK;AAUXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,SADD;AAENC,QAAAA,KAAK,EAAE;AACLH,UAAAA,IAAI,EAAE,MADD;AAELI,UAAAA,KAAK,EAAE,CAAC,YAAD,EAAe,YAAf,CAFF,CAGL;;AAHK,SAFD,CAON;AACA;;AARM,OAVG;AAoBXC,MAAAA,MAAM,EAAE,EApBG;AAqBXC,MAAAA,MAAM,EAAE;AArBG,KAAb;AAuBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,QAAQ,gBACP,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IADnB;AAEE,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWO,MAFrB;AAGE,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWW,MAHrB;AAIE,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWY,MAJrB;AAKE,MAAA,aAAa,EAAGE,MAAD,IAAY,KAAKC,QAAL,CAAcD,MAAd,CAL7B;AAME,MAAA,QAAQ,EAAGA,MAAD,IAAY,KAAKC,QAAL,CAAcD,MAAd,CANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,gBAUP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,CADF;AAgBD;;AA9C4B;;AAiD/B,eAAejB,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nclass Graphs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: false,\n      data: [\n        {\n          y: [],\n          x: [],\n          mode: \"markers\",\n          type: \"scatter\",\n        },\n      ],\n      layout: {\n        title: \"Graph 1\",\n        xaxis: {\n          type: \"date\",\n          range: ['2020-07-01', '2020-12-31'],\n          //tickformat: '%H:%M'\n        },\n        //autosize: false,\n        //height: 300,\n      },\n      frames: [],\n      config: {},\n    };\n  }\n\n  render() {\n    const { response } = this.state;\n    return (\n      <div>\n        {response ? (\n          <Plot\n            data={this.state.data}\n            layout={this.state.layout}\n            frames={this.state.frames}\n            config={this.state.config}\n            onInitialized={(figure) => this.setState(figure)}\n            onUpdate={(figure) => this.setState(figure)}\n          />\n        ) : (\n          <p>Loading...</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Graphs;\n"]},"metadata":{},"sourceType":"module"}