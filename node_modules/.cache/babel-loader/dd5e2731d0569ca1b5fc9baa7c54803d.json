{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from './Graphs';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getXY = () => {\n      const {\n        data,\n        times,\n        config\n      } = this.state;\n      var starObject = config.files[Object.keys(config.files)[0]];\n      var keyName = starObject[Object.keys(starObject)[0]];\n      console.log(data);\n      var result = {\n        x: 0,\n        y: 0\n      };\n\n      if (data.length !== 0 && times.length !== 0) {// var abc = data.map ((x) => {\n        //   return x\n        // })\n      }\n\n      return result;\n    };\n\n    this.state = {\n      config: require('./../config.json'),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      config,\n      times,\n      data\n    } = this.state;\n    const socket = socketIOClient(config.app.host + \":\" + config.app.port); //new times.star\n\n    socket.on(\"newTimes\", item => {\n      this.setState({\n        timesLoaded: true,\n        times: times.push(item)\n      });\n    }); //new data.star\n\n    socket.on(\"newData\", item => {\n      this.setState({\n        dataLoaded: true,\n        data: data.push(item)\n      });\n    });\n  } //filter data for graphs\n\n\n  render() {\n    const {\n      timesLoaded,\n      dataLoaded\n    } = this.state;\n    this.getXY();\n\n    if (!(timesLoaded && dataLoaded)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return (\n        /*#__PURE__*/\n        //<NavBar />\n        //<Activity /> coord = {this.getXY()} \n        React.createElement(Graphs, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }\n        }) //<Table /> \n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>  \n\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js"],"names":["React","Component","socketIOClient","Graphs","App","constructor","props","getXY","data","times","config","state","starObject","files","Object","keys","keyName","console","log","result","x","y","length","require","timesLoaded","dataLoaded","componentDidMount","socket","app","host","port","on","item","setState","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAEzCI,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsCnBC,KAtCmB,GAsCX,MAAM;AACZ,YAAM;AAACC,QAAAA,IAAD;AAAOC,QAAAA,KAAP;AAAcC,QAAAA;AAAd,UAAyB,KAAKC,KAApC;AACA,UAAIC,UAAU,GAAGF,MAAM,CAACG,KAAP,CAAaC,MAAM,CAACC,IAAP,CAAYL,MAAM,CAACG,KAAnB,EAA0B,CAA1B,CAAb,CAAjB;AACA,UAAIG,OAAO,GAAGJ,UAAU,CAACE,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwB,CAAxB,CAAD,CAAxB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAEA,UAAIW,MAAM,GAAG;AAACC,QAAAA,CAAC,EAAC,CAAH;AAAKC,QAAAA,CAAC,EAAC;AAAP,OAAb;;AACA,UAAIb,IAAI,CAACc,MAAL,KAAgB,CAAhB,IAAqBb,KAAK,CAACa,MAAN,KAAiB,CAA1C,EAA6C,CAE3C;AACA;AACA;AACD;;AAED,aAAOH,MAAP;AACD,KArDkB;;AAEjB,SAAKR,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAEa,OAAO,CAAC,kBAAD,CADJ;AAEXC,MAAAA,WAAW,EAAE,KAFF;AAGXC,MAAAA,UAAU,EAAE,KAHD;AAIXhB,MAAAA,KAAK,EAAE,EAJI;AAKXD,MAAAA,IAAI,EAAE;AALK,KAAb;AAOD;;AAGDkB,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAAChB,MAAAA,MAAD;AAASD,MAAAA,KAAT;AAAgBD,MAAAA;AAAhB,QAAwB,KAAKG,KAAnC;AACA,UAAMgB,MAAM,GAAGzB,cAAc,CAACQ,MAAM,CAACkB,GAAP,CAAWC,IAAX,GAAgB,GAAhB,GAAoBnB,MAAM,CAACkB,GAAP,CAAWE,IAAhC,CAA7B,CAFiB,CAIjB;;AACAH,IAAAA,MAAM,CAACI,EAAP,CAAU,UAAV,EAAsBC,IAAI,IAAI;AAC1B,WAAKC,QAAL,CAAc;AACZT,QAAAA,WAAW,EAAE,IADD;AAEZf,QAAAA,KAAK,EAAEA,KAAK,CAACyB,IAAN,CAAWF,IAAX;AAFK,OAAd;AAIH,KALD,EALiB,CAYjB;;AACAL,IAAAA,MAAM,CAACI,EAAP,CAAU,SAAV,EAAqBC,IAAI,IAAI;AAC3B,WAAKC,QAAL,CAAc;AACZR,QAAAA,UAAU,EAAE,IADA;AAEZjB,QAAAA,IAAI,EAAEA,IAAI,CAAC0B,IAAL,CAAUF,IAAV;AAFM,OAAd;AAID,KALD;AAOD,GAlCwC,CAuCzC;;;AAoBAG,EAAAA,MAAM,GAAG;AACP,UAAM;AAACX,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAA6B,KAAKd,KAAxC;AACA,SAAKJ,KAAL;;AACA,QAAI,EAAEiB,WAAW,IAAIC,UAAjB,CAAJ,EAAkC;AAChC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAEO;AACL;AAAA;AACE;AACA;AACA,4BAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CAIE;AACA;;AALF;AAOD;AACF;;AAzEwC","sourcesContent":["import React, { Component } from 'react'\nimport socketIOClient from \"socket.io-client\"; \nimport Graphs from './Graphs'\n\nexport default class App extends Component {\n  \n  constructor (props){\n    super(props)\n    this.state = {\n      config: require('./../config.json'),\n      timesLoaded: false,\n      dataLoaded: false,\n      times: [],\n      data: []\n    }\n  }\n\n\n  componentDidMount(){\n    const {config, times, data} = this.state;\n    const socket = socketIOClient(config.app.host+\":\"+config.app.port); \n    \n    //new times.star\n    socket.on(\"newTimes\", item => {\n        this.setState({\n          timesLoaded: true,\n          times: times.push(item)\n        });\n    });\n\n    //new data.star\n    socket.on(\"newData\", item => {\n      this.setState({\n        dataLoaded: true,\n        data: data.push(item)\n      });\n    });\n\n  }\n\n\n\n\n  //filter data for graphs\n  getXY = () => {\n    const {data, times, config } = this.state;\n    var starObject = config.files[Object.keys(config.files)[0]]\n    var keyName = starObject[Object.keys(starObject)[0]]\n    console.log(data)\n\n    var result = {x:0,y:0}\n    if (data.length !== 0 && times.length !== 0 ){\n\n      // var abc = data.map ((x) => {\n      //   return x\n      // })\n    }\n\n    return result\n  }\n\n\n  \n  render() {\n    const {timesLoaded, dataLoaded } = this.state;\n    this.getXY()\n    if (!(timesLoaded && dataLoaded)) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        //<NavBar />\n        //<Activity /> coord = {this.getXY()} \n        <Graphs /> \n        //<Table /> \n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>  \n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}