{"ast":null,"code":"var _jsxFileName = \"/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport Graphs from './Graphs';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getXY = () => {\n      const {\n        data,\n        times\n      } = this.state;\n      return 0;\n    };\n\n    this.state = {\n      config: require('./../config.json'),\n      timesLoaded: false,\n      dataLoaded: false,\n      data: [{\n        \"_mmsImageKey_Value\": 1588441463044609,\n        \"dasdsaads\": \"sdasdads\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    const {\n      config,\n      times,\n      data\n    } = this.state;\n    const socket = socketIOClient(config.app.host + \":\" + config.app.port);\n\n    const mergeById = (a1, a2, id) => a1.map(itm => ({ ...a2.find(item => item[id] === itm[id] && item),\n      ...itm\n    })); //new times.star\n\n\n    socket.on(\"newTimes\", item => {\n      var starObject = config.files[Object.keys(config.files)[0]];\n      var keyName = starObject[Object.keys(starObject)[0]];\n      console.log(mergeById(data, [item], keyName)); // //if id exists -> merge\n      // if (index != -1 ){\n      //   var object = data.map((a, i) => Object.assign({}, a, [item][i]));\n      //   console.log (object)\n      //   this.setState({\n      //     timesLoaded: true,\n      //     //times: times.push(item)\n      //   });\n      // } else {\n      //   this.setState({\n      //     timesLoaded: true,\n      //     data: data.push(item)\n      //   });\n      // }\n    }); // new data.star\n    // socket.on(\"newData\", item => {\n    //   this.setState({\n    //     dataLoaded: true,\n    //     data: data.push(item)\n    //   });\n    // });\n  } //filter data for graphs\n\n\n  render() {\n    const {\n      timesLoaded,\n      dataLoaded,\n      times\n    } = this.state;\n\n    if (!(timesLoaded && dataLoaded)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return (\n        /*#__PURE__*/\n        //<NavBar />\n        //<Activity />\n        React.createElement(Graphs, {\n          coord: this.getXY(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }\n        }) //<Table /> \n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>  \n\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/duc/Dropbox/Projects/Web/cryo-web-monitor/src/client/App.js"],"names":["React","Component","socketIOClient","Graphs","App","constructor","props","getXY","data","times","state","config","require","timesLoaded","dataLoaded","componentDidMount","socket","app","host","port","mergeById","a1","a2","id","map","itm","find","item","on","starObject","files","Object","keys","keyName","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAEzCI,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA8DnBC,KA9DmB,GA8DX,MAAM;AACZ,YAAM;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,UAAiB,KAAKC,KAA5B;AAEA,aAAO,CAAP;AAKD,KAtEkB;;AAEjB,SAAKA,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEC,OAAO,CAAC,kBAAD,CADJ;AAEXC,MAAAA,WAAW,EAAE,KAFF;AAGXC,MAAAA,UAAU,EAAE,KAHD;AAIXN,MAAAA,IAAI,EAAE,CAAC;AACL,8BAAsB,gBADjB;AAEL,qBAAa;AAFR,OAAD;AAJK,KAAb;AASD;;AAGDO,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACJ,MAAAA,MAAD;AAASF,MAAAA,KAAT;AAAgBD,MAAAA;AAAhB,QAAwB,KAAKE,KAAnC;AACA,UAAMM,MAAM,GAAGd,cAAc,CAACS,MAAM,CAACM,GAAP,CAAWC,IAAX,GAAgB,GAAhB,GAAoBP,MAAM,CAACM,GAAP,CAAWE,IAAhC,CAA7B;;AACA,UAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,KAClBF,EAAE,CAACG,GAAH,CAAOC,GAAG,KAAK,EACX,GAAGH,EAAE,CAACI,IAAH,CAASC,IAAD,IAAWA,IAAI,CAACJ,EAAD,CAAJ,KAAaE,GAAG,CAACF,EAAD,CAAjB,IAA0BI,IAA5C,CADQ;AAEX,SAAGF;AAFQ,KAAL,CAAV,CADA,CAHiB,CASjB;;;AACAT,IAAAA,MAAM,CAACY,EAAP,CAAU,UAAV,EAAsBD,IAAI,IAAI;AAC5B,UAAIE,UAAU,GAAGlB,MAAM,CAACmB,KAAP,CAAaC,MAAM,CAACC,IAAP,CAAYrB,MAAM,CAACmB,KAAnB,EAA0B,CAA1B,CAAb,CAAjB;AACA,UAAIG,OAAO,GAAGJ,UAAU,CAACE,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwB,CAAxB,CAAD,CAAxB;AAEAK,MAAAA,OAAO,CAACC,GAAR,CAAYf,SAAS,CAACZ,IAAD,EAAO,CAACmB,IAAD,CAAP,EAAeM,OAAf,CAArB,EAJ4B,CAM5B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMD,KA1BD,EAViB,CAsCjB;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA7DwC,CA+DzC;;;AAYAG,EAAAA,MAAM,GAAG;AACP,UAAM;AAACvB,MAAAA,WAAD;AAAcC,MAAAA,UAAd;AAA0BL,MAAAA;AAA1B,QAAoC,KAAKC,KAA/C;;AACA,QAAI,EAAEG,WAAW,IAAIC,UAAjB,CAAJ,EAAkC;AAChC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAEO;AACL;AAAA;AACE;AACA;AACA,4BAAC,MAAD;AAAQ,UAAA,KAAK,EAAI,KAAKP,KAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CAIE;AACA;;AALF;AAOD;AACF;;AAxFwC","sourcesContent":["import React, { Component } from 'react'\nimport socketIOClient from \"socket.io-client\"; \nimport Graphs from './Graphs'\n\nexport default class App extends Component {\n  \n  constructor (props){\n    super(props)\n    this.state = {\n      config: require('./../config.json'),\n      timesLoaded: false,\n      dataLoaded: false,\n      data: [{\n        \"_mmsImageKey_Value\": 1588441463044609,\n        \"dasdsaads\": \"sdasdads\"\n      }]\n    }\n  }\n\n\n  componentDidMount(){\n    const {config, times, data} = this.state;\n    const socket = socketIOClient(config.app.host+\":\"+config.app.port);\n    const mergeById = (a1, a2, id ) =>\n    a1.map(itm => ({\n        ...a2.find((item) => (item[id] === itm[id]) && item),\n        ...itm\n    }));\n\n    //new times.star\n    socket.on(\"newTimes\", item => {\n      var starObject = config.files[Object.keys(config.files)[0]]\n      var keyName = starObject[Object.keys(starObject)[0]]\n\n      console.log(mergeById(data, [item], keyName));\n\n      // //if id exists -> merge\n      // if (index != -1 ){\n      //   var object = data.map((a, i) => Object.assign({}, a, [item][i]));\n      //   console.log (object)\n\n      //   this.setState({\n      //     timesLoaded: true,\n      //     //times: times.push(item)\n      //   });\n      // } else {\n      //   this.setState({\n      //     timesLoaded: true,\n      //     data: data.push(item)\n      //   });\n      // }\n\n      \n\n\n      \n    });\n\n    // new data.star\n    // socket.on(\"newData\", item => {\n    //   this.setState({\n    //     dataLoaded: true,\n    //     data: data.push(item)\n    //   });\n    // });\n  }\n\n  //filter data for graphs\n  getXY = () => {\n    const {data, times } = this.state;\n\n    return 0\n\n\n\n\n  }\n\n  \n  render() {\n    const {timesLoaded, dataLoaded, times } = this.state;\n    if (!(timesLoaded && dataLoaded)) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        //<NavBar />\n        //<Activity />\n        <Graphs coord = {this.getXY()}/> \n        //<Table /> \n        //<div>Hello!!!It is {times._mmsdateAuqired_Value} </div>  \n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}